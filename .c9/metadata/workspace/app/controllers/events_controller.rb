{"changed":true,"filter":false,"title":"events_controller.rb","tooltip":"/app/controllers/events_controller.rb","value":"class EventsController < ApplicationController\n  before_action :set_event, only: [:show, :edit, :update, :destroy]\n\n  # GET /events\n  # GET /events.json\n  def index\n    @events = Event.all\n  end\n\n  # GET /events/1\n  # GET /events/1.json\n  def show\n  end\n\n  # GET /events/new\n  def new\n    @event = Event.new\n  end\n\n  # GET /events/1/edit\n  def edit\n  end\n\n  # POST /events\n  # POST /events.json\n  def create\n    @event = Event.new(event_params)\n    respond_to do |format|\n      if @event.save\n        format.html { redirect_to @event, notice: 'Event was successfully created.' }\n        format.json { render :show, status: :created, location: @event }\n      else\n        format.html { render :new }\n        format.json { render json: @event.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # PATCH/PUT /events/1\n  # PATCH/PUT /events/1.json\n  def update\n    \n    Location.find(params[\"add_locations\"]).each do |location|\n      @event.locations << location\n    end\n    respond_to do |format|\n      if @event.update(event_params)\n        format.html { redirect_to @event, notice: 'Event was successfully updated.' }\n        format.json { render :show, status: :ok, location: @event }\n      else\n        format.html { render :edit }\n        format.json { render json: @event.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # DELETE /events/1\n  # DELETE /events/1.json\n  def destroy\n    @event.destroy\n    respond_to do |format|\n      format.html { redirect_to events_url, notice: 'Event was successfully destroyed.' }\n      format.json { head :no_content }\n    end\n  end\n\n  private\n    # Use callbacks to share common setup or constraints between actions.\n    def set_event\n      @event = Event.find(params[:id])\n    end\n\n    # Never trust parameters from the scary internet, only allow the white list through.\n    def event_params\n      params.require(:event).permit(:name)\n    end\nend\n","undoManager":{"mark":-1,"position":4,"stack":[[{"group":"doc","deltas":[{"start":{"row":36,"column":5},"end":{"row":36,"column":6},"action":"insert","lines":["g"]},{"start":{"row":36,"column":6},"end":{"row":36,"column":7},"action":"insert","lines":["v"]}]}],[{"group":"doc","deltas":[{"start":{"row":36,"column":7},"end":{"row":36,"column":8},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":36,"column":7},"end":{"row":36,"column":8},"action":"remove","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":36,"column":6},"end":{"row":36,"column":7},"action":"remove","lines":["v"]}]}],[{"group":"doc","deltas":[{"start":{"row":36,"column":5},"end":{"row":36,"column":6},"action":"remove","lines":["g"]}]}]]},"ace":{"folds":[],"scrolltop":720.5,"scrollleft":0,"selection":{"start":{"row":56,"column":20},"end":{"row":56,"column":20},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":44,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1427400628000}